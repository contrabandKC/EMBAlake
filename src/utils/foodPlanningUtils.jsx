import React from 'react';

/**
 * Returns an icon component based on meal type
 * @param {string} mealType - The type of meal (breakfast, lunch, dinner)
 * @returns {JSX.Element} Icon component for the meal type
 */
export const getMealTypeIcon = (mealType) => {
  switch (mealType.toLowerCase()) {
    case 'breakfast':
      return (
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="#0066CC" className="bi bi-cup-hot" viewBox="0 0 16 16">
          <path fillRule="evenodd" d="M.5 6a.5.5 0 0 0-.488.608l1.652 7.434A2.5 2.5 0 0 0 4.104 16h5.792a2.5 2.5 0 0 0 2.44-1.958l.131-.59a3 3 0 0 0 1.3-5.854l.221-.99A.5.5 0 0 0 13.5 6zM13 12.5a2 2 0 0 1-.316-.025l.867-3.898A2.001 2.001 0 0 1 13 12.5M2.64 13.825 1.123 7h11.754l-1.517 6.825A1.5 1.5 0 0 1 9.896 15H4.104a1.5 1.5 0 0 1-1.464-1.175Z"/>
          <path d="m4.4.8-.003.004-.014.019a4 4 0 0 0-.204.31 2 2 0 0 0-.141.267c-.026.06-.034.092-.037.103v.004a.6.6 0 0 0 .091.248c.075.133.178.272.308.445l.01.012c.118.158.26.347.37.543.112.2.22.455.22.745 0 .188-.065.368-.119.494a3 3 0 0 1-.202.388 5 5 0 0 1-.253.382l-.018.025-.005.008-.001.002-.001.001-.001.001c-.152.196-.324.339-.445.372-.121.033-.245.004-.315-.105a.8.8 0 0 1-.12-.466c0-.29.107-.545.22-.745.109-.196.252-.385.37-.543l.01-.012c.13-.173.233-.312.308-.445a.6.6 0 0 0 .091-.252c.003-.01-.005-.042-.03-.102a2 2 0 0 0-.141-.267 4 4 0 0 0-.204-.31l-.014-.019-.003-.004-.001-.001-.001-.001h-.001A.5.5 0 0 0 4 .8a.5.5 0 0 0-.4.8Z"/>
        </svg>
      );
    case 'lunch':
      return (
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="#0066CC" className="bi bi-egg-fried" viewBox="0 0 16 16">
          <path d="M8 11a3 3 0 1 0 0-6 3 3 0 0 0 0 6"/>
          <path d="M13.997 5.17a5 5 0 0 0-8.101-4.09A5 5 0 0 0 1.28 9.342a5 5 0 0 0 8.336 5.109 3.5 3.5 0 0 0 5.201-4.065 3.001 3.001 0 0 0-.822-5.216zm-1-.034a1 1 0 0 0 .668.977 2.001 2.001 0 0 1 .547 3.478 1 1 0 0 0-.341 1.113 2.5 2.5 0 0 1-3.715 2.905 1 1 0 0 0-1.262.152 4 4 0 0 1-6.67-4.087 1 1 0 0 0-.2-1 4 4 0 0 1 3.693-6.61 1 1 0 0 0 .8-.2 4 4 0 0 1 6.48 3.273z"/>
        </svg>
      );
    case 'dinner':
      return (
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="#0066CC" className="bi bi-cup-straw" viewBox="0 0 16 16">
          <path d="M13.964 1.18a.5.5 0 0 1-.278.65l-2.255.902-.286 2.86a.5.5 0 0 1-.492.42H1.5a.5.5 0 0 1-.498-.45l-.714-7.14A.5.5 0 0 1 .8.58L2.9 1.401a.5.5 0 0 1 .274.274l.254.635 2.8 1.12c.13.052.262.152.326.292l.891 1.916a.5.5 0 0 1-.063.557l-.612.613a.5.5 0 0 1-.584.096 2 2 0 0 0-2.311.362.5.5 0 0 1-.656.031c-.767-.656-.9-1.932-.23-2.8.712-.92 2.3-.11 2.405-.15.018-.007.066-.011.13-.01l.196.01a.5.5 0 0 1 .485.528l-.66.77a.5.5 0 0 1-.257.373l-.45.225a.5.5 0 1 0 .448.894l.452-.227a.5.5 0 0 1 .618.142l.29.435a.5.5 0 0 1-.43.828l-.818-.424a.5.5 0 0 1-.255-.47l-.056-1.121a.5.5 0 0 1 .136-.376l.679-.679-1.02-2.19a.5.5 0 0 1-.068-.219l-.148-2.355-2.66-1.64a.5.5 0 0 1-.278-.65l.415-1.038a.5.5 0 0 1 .65-.278z"/>
        </svg>
      );
    default:
      return (
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="#0066CC" className="bi bi-grid" viewBox="0 0 16 16">
          <path d="M1 2.5A1.5 1.5 0 0 1 2.5 1h3A1.5 1.5 0 0 1 7 2.5v3A1.5 1.5 0 0 1 5.5 7h-3A1.5 1.5 0 0 1 1 5.5v-3zM2.5 2a.5.5 0 0 0-.5.5v3a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5v-3a.5.5 0 0 0-.5-.5h-3zm6.5.5A1.5 1.5 0 0 1 10.5 1h3A1.5 1.5 0 0 1 15 2.5v3A1.5 1.5 0 0 1 13.5 7h-3A1.5 1.5 0 0 1 9 5.5v-3zM10.5 2a.5.5 0 0 0-.5.5v3a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5v-3a.5.5 0 0 0-.5-.5h-3zM1 10.5A1.5 1.5 0 0 1 2.5 9h3A1.5 1.5 0 0 1 7 10.5v3A1.5 1.5 0 0 1 5.5 15h-3A1.5 1.5 0 0 1 1 13.5v-3zm1.5-.5a.5.5 0 0 0-.5.5v3a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5v-3a.5.5 0 0 0-.5-.5h-3zm6.5.5A1.5 1.5 0 0 1 10.5 9h3a1.5 1.5 0 0 1 1.5 1.5v3a1.5 1.5 0 0 1-1.5 1.5h-3a1.5 1.5 0 0 1-1.5-1.5v-3zm1.5-.5a.5.5 0 0 0-.5.5v3a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5v-3a.5.5 0 0 0-.5-.5h-3z"/>
        </svg>
      );
  }
};

/**
 * Returns an icon component based on dietary restriction
 * @param {string} dietaryType - The dietary restriction type
 * @returns {JSX.Element} Icon component for the dietary restriction
 */
export const getDietaryIcon = (dietaryType) => {
  switch (dietaryType.toLowerCase()) {
    case 'vegetarian':
      return (
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="#28a745" className="bi bi-flower1" viewBox="0 0 16 16">
          <path d="M6.174 1.184a2 2 0 0 1 3.652 0A2 2 0 0 1 12.99 3.01a2 2 0 0 1 1.826 3.164 2 2 0 0 1 0 3.652 2 2 0 0 1-1.826 3.164 2 2 0 0 1-3.164 1.826 2 2 0 0 1-3.652 0A2 2 0 0 1 3.01 12.99a2 2 0 0 1-1.826-3.164 2 2 0 0 1 0-3.652A2 2 0 0 1 3.01 3.01a2 2 0 0 1 3.164-1.826zM8 1a1 1 0 0 0-.998 1.03l.01.091c.012.077.029.176.054.296.049.241.122.542.213.887.182.688.428 1.513.676 2.314L8 5.762l.045-.144c.248-.8.494-1.626.676-2.314.091-.345.164-.646.213-.887a4.997 4.997 0 0 0 .064-.386L9 2a1 1 0 0 0-1-1zM2 9l.03-.002.091-.01a4.99 4.99 0 0 0 .296-.054c.241-.049.542-.122.887-.213a60.59 60.59 0 0 0 2.314-.676L5.762 8l-.144-.045a60.59 60.59 0 0 0-2.314-.676 16.705 16.705 0 0 0-.887-.213 4.99 4.99 0 0 0-.386-.064L2 7a1 1 0 1 0 0 2zm7 5-.002-.03a5.005 5.005 0 0 0-.064-.386 16.398 16.398 0 0 0-.213-.888 60.582 60.582 0 0 0-.676-2.314L8 10.238l-.045.144c-.248.8-.494 1.626-.676 2.314-.091.345-.164.646-.213.887a4.996 4.996 0 0 0-.064.386L7 14a1 1 0 1 0 2 0zm-5.696-2.134.025-.017a5.001 5.001 0 0 0 .303-.248c.184-.164.408-.377.661-.629A60.614 60.614 0 0 0 5.96 9.23l.103-.111-.147.033a60.88 60.88 0 0 0-2.343.572c-.344.093-.64.18-.874.258a5.063 5.063 0 0 0-.367.138l-.027.014a1 1 0 1 0 1 1.732zM4.5 14.062a1 1 0 0 0 1.366-.366l.014-.027c.01-.02.021-.048.036-.084a5.09 5.09 0 0 0 .102-.283c.078-.233.165-.53.258-.874a60.6 60.6 0 0 0 .572-2.343l.033-.147-.11.102a60.848 60.848 0 0 0-1.743 1.667 17.07 17.07 0 0 0-.629.66 5.06 5.06 0 0 0-.248.304l-.017.025a1 1 0 0 0 .366 1.366zm9.196-8.196a1 1 0 0 0-1-1.732l-.025.017a4.951 4.951 0 0 0-.303.248 16.69 16.69 0 0 0-.661.629A60.72 60.72 0 0 0 10.04 6.77l-.102.111.147-.033a60.6 60.6 0 0 0 2.342-.572c.345-.093.642-.18.875-.258a4.993 4.993 0 0 0 .367-.138.53.53 0 0 0 .027-.014zM11.5 1.938a1 1 0 0 0-1.366.366l-.014.027c-.01.02-.021.048-.036.084a5.09 5.09 0 0 0-.102.283c-.078.233-.165.53-.258.875a60.62 60.62 0 0 0-.572 2.342l-.033.147.11-.102a60.848 60.848 0 0 0 1.743-1.667c.252-.253.465-.477.629-.66a5.001 5.001 0 0 0 .248-.304l.017-.025a1 1 0 0 0-.366-1.366zM8 9a1 1 0 1 0 0-2 1 1 0 0 0 0 2z"/>
        </svg>
      );
    case 'vegan':
      return (
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="#28a745" className="bi bi-tree" viewBox="0 0 16 16">
          <path d="M8.416.223a.5.5 0 0 0-.832 0l-3 4.5A.5.5 0 0 0 5 5.5h.098L3.076 8.735A.5.5 0 0 0 3.5 9.5h.191l-1.638 3.276a.5.5 0 0 0 .447.724H7V16h2v-2.5h4.5a.5.5 0 0 0 .447-.724L12.31 9.5h.191a.5.5 0 0 0 .424-.765L10.902 5.5H11a.5.5 0 0 0 .416-.777l-3-4.5zM6.437 4.758A.5.5 0 0 0 6 4.5h-.066L8 1.401 10.066 4.5H10a.5.5 0 0 0-.424.765L11.598 8.5H11.5a.5.5 0 0 0-.447.724L12.69 12.5H3.309l1.638-3.276A.5.5 0 0 0 4.5 8.5h-.098l2.022-3.235a.5.5 0 0 0 .013-.507z"/>
        </svg>
      );
    case 'glutenfree':
    case 'gluten-free':
    case 'glutenFree':
      return (
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="#dc3545" className="bi bi-slash-circle" viewBox="0 0 16 16">
          <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
          <path d="M11.354 4.646a.5.5 0 0 0-.708 0l-6 6a.5.5 0 0 0 .708.708l6-6a.5.5 0 0 0 0-.708z"/>
        </svg>
      );
    case 'dairyfree':
    case 'dairy-free':
    case 'dairyFree':
      return (
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="#17a2b8" className="bi bi-droplet-slash" viewBox="0 0 16 16">
          <path d="M7.21.8C7.69.295 8 0 8 0c.109.363.234.708.371 1.038.812 1.946 2.073 3.35 3.197 4.6C12.878 7.096 14 8.345 14 10a6 6 0 0 1-12 0C2 6.668 5.58 2.517 7.21.8zm.413 1.021A31.25 31.25 0 0 0 5.794 3.99c-.726.95-1.436 2.008-1.96 3.07C3.304 8.133 3 9.138 3 10a6 6 0 0 1 6 6c0-2.245-1.44-3.962-2.957-5.711-1.023-1.182-2.147-2.218-3.31-3.468a.5.5 0 0 0-.11 1z"/>
          <path d="M14.975 10.025a.5.5 0 1 0-.258-.966A4.5 4.5 0 0 0 8 5.25a.5.5 0 0 0 0 1 3.5 3.5 0 0 1 6.717 2.842.5.5 0 0 0 .258.933zM8 7a1 1 0 1 0 0-2 1 1 0 0 0 0 2z"/>
        </svg>
      );
    case 'nutallergy':
    case 'nut-allergy':
    case 'nutAllergy':
      return (
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="#dc3545" className="bi bi-exclamation-diamond" viewBox="0 0 16 16">
          <path d="M6.95.435c.58-.58 1.52-.58 2.1 0l6.515 6.516c.58.58.58 1.519 0 2.098L9.05 15.565c-.58.58-1.519.58-2.098 0L.435 9.05a1.482 1.482 0 0 1 0-2.098L6.95.435zm1.4.7a.495.495 0 0 0-.7 0L1.134 7.65a.495.495 0 0 0 0 .7l6.516 6.516a.495.495 0 0 0 .7 0l6.516-6.516a.495.495 0 0 0 0-.7L8.35 1.134z"/>
          <path d="M7.002 11a1 1 0 1 1 2 0 1 1 0 0 1-2 0zM7.1 4.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 4.995z"/>
        </svg>
      );
    default:
      return (
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="#6c757d" className="bi bi-info-circle" viewBox="0 0 16 16">
          <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
          <path d="m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0z"/>
        </svg>
      );
  }
};

/**
 * Generates a color for dietary preference badges
 * @param {string} dietaryType - The dietary restriction type
 * @returns {Object} Style object with background and text color
 */
export const getDietaryBadgeStyle = (dietaryType) => {
  switch (dietaryType.toLowerCase()) {
    case 'vegetarian':
      return {
        background: 'rgba(40, 167, 69, 0.1)',
        color: '#28a745'
      };
    case 'vegan':
      return {
        background: 'rgba(40, 167, 69, 0.15)',
        color: '#198754'
      };
    case 'glutenfree':
    case 'gluten-free':
    case 'glutenFree':
      return {
        background: 'rgba(220, 53, 69, 0.1)',
        color: '#dc3545'
      };
    case 'dairyfree':
    case 'dairy-free':
    case 'dairyFree':
      return {
        background: 'rgba(23, 162, 184, 0.1)',
        color: '#17a2b8'
      };
    case 'nutallergy':
    case 'nut-allergy':
    case 'nutAllergy':
      return {
        background: 'rgba(220, 53, 69, 0.1)',
        color: '#dc3545'
      };
    default:
      return {
        background: 'rgba(108, 117, 125, 0.1)',
        color: '#6c757d'
      };
  }
}; 